---
services:
  jest:
    image: yousrar/notes_manager:latest
    container_name: jest
    hostname: jest
    command: jest
    build: 
      dockerfile: Dockerfile
      context: .
    volumes:
      - ./api:/api
      # - ./web:/web
    environment:
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
    depends_on:
      database:
        condition: service_healthy 
  api:
    image: yousrar/notes_manager:latest
    container_name: api
    hostname: api
    command: npm --prefix api start
    build: 
      dockerfile: Dockerfile
      context: .
    volumes:
      - ./api:/api
      # - ./web:/web
    environment:
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      API_BASE_URL: ${API_BASE_URL}
    ports:
      - "3000:3000"
    depends_on:
      jest:
        condition: service_completed_successfully
  web:
    image: yousrar/notes_manager:latest
    container_name: web
    hostname: web
    command: npm --prefix web start
    build: 
      dockerfile: Dockerfile
      context: .
    volumes:
      # - ./api:/api
      - ./web:/web
    environment:
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      API_BASE_URL: ${API_BASE_URL}
    depends_on:
      jest:
        condition: service_completed_successfully

  database:
    container_name: database
    hostname: database
    # image: mariadb:11.2-jammy
    image: mariadb:11-noble
    command: --init-file /data/application/init.sql --default-authentication-plugin=mysql_native_password --bind-address 0.0.0.0
    volumes:
      - ./db/init.sql:/data/application/init.sql
      - volume_mysql:/var/lib/mysql
    restart: always
    environment:
      MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: true
      # MARIADB_AUTO_UPGRADE: 1
      MYSQL_DATABASE: ${DB_HOST}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_NAME: ${DB_NAME}
    healthcheck:
      # test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      # test: ["CMD", "mariadbadmin", "ping", "-h", "localhost"]
      test: ["CMD", "mariadb-admin", "ping", "-h", "localhost" , '-u', "${DB_USER}" , "-p${DB_PASSWORD}" ]
      interval: 30s
      timeout: 10s
      retries: 5

  proxy:
    container_name: proxy
    hostname: proxy
    image: nginx:alpine
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
      # - "127.0.0.1:3306:3306"

    environment:
      API_BASE_URL: ${API_BASE_URL:-http://localhost:3000}
      WEB_BASE_URL: ${WEB_BASE_URL:-http://localhost:3001}
      PORT: ${PORT:-3000}
      WEB_PORT: ${WEB_PORT:-3001}
      MYSQL_HOSTNAME: ${DB_HOST}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}

    depends_on:
      - database
      - api
      - web

volumes:
  volume_mysql:
networks:
  bridge:
    name: notes